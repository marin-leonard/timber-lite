// Typography
// ---------------------------------------

// Setting root sizes and base styles.
html {
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;

    @include rootsize;
}

// Site-wide base styles.
body {
    font-family: unquote(map-get($bodytype, font-family));
    font-style: normal;
    font-weight: map-get($bodytype, regular);
    line-height: 2rem;

    @include fontsize(zeta, all);
}

// Links.
a {
    // transition: color .1s, background .1s;

    color: $linkColour;
    text-decoration: none;

    &:hover, &:active, &:focus {
        color: $hoverColour;
        text-decoration: none;
    }
}

// Nice underlines for text links.
%a {
    display: inline;
    background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0) 50%,lighten($linkColour,20%) 50%);
    background-position: 0 78%;
    background-repeat: repeat-x;
    background-size: 100% 0.15rem;
    text-shadow: 0.1rem 0 $backgroundColour,0.15rem 0 $backgroundColour,-0.1rem 0 $backgroundColour,-0.15rem 0 $backgroundColour;

    &:hover, &:active, &:focus {
        background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0) 50%,lighten($hoverColour,20%) 50%);
    }
}

p a, li a {
    @extend %a;
}

// Paragraphs. OpenType ligatures and oldstyle figures enabled if available.
p {
    font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;

    @include baseline($fontsize: zeta, $font: $bodytype, $lineheight: 2, $below: 2, $breakpoint: all);
}

// Headings. OpenType ligatures, discretionary ligatures and lining figures enabled if available.
h1, h2, h3, h4, h5, h6 {
    font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;

    color: $headingColour;
    font-family: unquote(map-get($headingtype, font-family));
    font-style: normal;
    font-weight: map-get($headingtype, bold);

    text-transform: uppercase;
}

// Heading level 0.
.h0 {
    @include sassline($fontsize: alpha, $font: $headingtype, $lineheight: 6, $below: 3, $breakpoint: all);
}

// Heading level 1.
h1, .h1, %alpha {
    @include sassline($fontsize: beta, $font: $headingtype, $lineheight: 4, $below: 3, $breakpoint: all);

    margin-top: 3rem;
}

// Heading level 2.
h2, .h2, %beta {
    @include sassline($fontsize: gamma, $font: $headingtype, $lineheight: 3, $below: 1, $breakpoint: all);

    margin-top: 2rem;
}

// Heading level 3.
h3, .h3, %gamma {
    @include sassline($fontsize: delta,$font: $headingtype, $lineheight: 2, $below: 1, $breakpoint: all);
}

// Heading level 4, 5, 6
h4, h5, h6, .h4, .h5, .h6, %delta {
    @include sassline($fontsize: epsilon, $font: $headingtype, $lineheight: 1.5, $below: 0.5, $breakpoint: all);
    letter-spacing: 0.075rem;
}

// Lists.
ul, ol {
    @include baseline(zeta, $bodytype, 2, 2, all);

    li {
        display: list-item;
        margin-left: 2rem;

        font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
        @include breakpoint(break-1) {
            // margin-left: 2rem;
        }
    }
}

// Bold.
b, strong, %bold {
    font-weight: map-get($bodytype, bold);
}

// Italic.
em, i, %italic {
    font-style: map-get($bodytype, italic);
}

// Caption and inline small text.
small, .caption {
    font-family: unquote(map-get($alttype, font-family));
    font-style: italic;
    font-weight: map-get($alttype, regular);

    @include fontsize(theta, all);

    margin-bottom: 0;
}

small {
    line-height: 1rem;
}

.caption {
    @include baseline(theta, $alttype, 2, 2, all);
    color: $captionColour;

    margin-bottom: 0 !important;
    line-height: 0.875em;

    & + p {
        padding-top: 0;
        margin-top: -5px;
    }
}

// Nice spacing for captions.
h1 + .caption, %alpha + .caption, h2 + %caption, %beta + .caption, h3 + .caption, %gamma + .caption {
    margin-top: -1rem;
}

%delta + .caption, %epsilon + .caption, %zeta + .caption {
    margin-top: 0rem;
}

// Quotes.
blockquote {
    max-width: 550px;
    margin: 0 auto;

    p {
        font-weight: 300;
        letter-spacing: -0.05em;
//        text-transform: uppercase;
        color: $headingColour;
        @include sassline(delta, $headingtype, 2.5, 1, all);
        // padding-left: 1rem;

        // Add spacing below blockquote paragraphs to align to baseline grid.
        $get-scale: map-get($modular-scale, scale-0);
        $get-size: map-get($get-scale, zeta);
        $rootsize: nth($sizes, 1);
        $baseline-shift: #{($get-size / 2 * ((2 * $rootsize / $get-size) - map-get($bodytype, cap-height))) / $rootsize + 0.00001};
        $baseline-push: #{3 - (($get-size * ((2 * $rootsize / $get-size) - map-get($bodytype, cap-height))) / $rootsize + 0.00001)};

        margin-bottom: #{$baseline-push}rem;
        padding-bottom: #{$baseline-shift}rem;

        @for $i from 2 through $breakpoints-limit {
            $get-scale: map-get($modular-scale, scale-#{$i - 1});
            $get-size: map-get($get-scale, zeta);
            $rootsize: nth($sizes, $i);
            $baseline-shift: #{($get-size / 2 * ((2 * $rootsize / $get-size) - map-get($bodytype, cap-height))) / $rootsize + 0.00001};
            $baseline-push: #{3 - (($get-size * ((2 * $rootsize / $get-size) - map-get($bodytype, cap-height))) / $rootsize + 0.00001)};

            @media screen and (min-width: nth($points, $i) / 16 * 1em ) {
                margin-bottom: #{$baseline-push}rem;
                padding-bottom: #{$baseline-shift}rem;
            }
        }
    }

    @include breakpoint(break-1) {
        // margin-left: -1rem;
    }

    cite {
        display: block;

        font-style: normal;
        font-weight: bold;
        font-size: 15px;
        text-align: center;
        text-transform: uppercase;
        letter-spacing: 0.1em;
    }
}

// Horizontal rule.
hr {
    background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0) 50%,$captionColour 50%);
    background-position: 0 50%;
    background-repeat: repeat-x;
    background-size: 100% 0.15rem;
    border: 0;
    margin: 0;
    padding-bottom: 3rem;
    padding-top: 3rem;
}

// Code block.
code, pre {
    background-color: $codeBackgroundColour;
    font-family: unquote(map-get($monospacetype, font-family));
}

pre {
    display: block;
    margin-bottom: 2rem;
    padding: 1rem;
    white-space: pre;
    white-space: pre-wrap;
    word-break: break-all;
    word-wrap: break-word;
}

code {
    line-height: 1rem;

    @include fontsize(theta, all);
}

// Letter space those capitals people, Jan Tschichold would be proud.
%upper {
    letter-spacing: 0.1rem;
    text-transform: uppercase;
}

// Real small caps.
%small-caps {
    font-feature-settings: 'smcp' 1, 'kern' 1;

    letter-spacing: 0.1rem;
}

// Consistent height numbers with OpenType.
%lining-numerals {
    font-feature-settings: 'lnum' 1, 'kern' 1;
}

// Ascending and descending numbers with OpenType.
%oldstyle-numerals {
    font-feature-settings: 'onum' 1, 'kern' 1;
}

.intro {
 @include sassline(delta, $headingtype, 2.5, 2, all);
     font-weight: 300; //Extra-Light 200
}

.dropcap {
    float: left;
    margin-right: 6px;

    font-size: 98px;
    font-weight: 200;
    line-height: 84px;
}

// Pull Content Outside
@include query-above($lap) {
    $gutter:           24px; // archive
    $col:             80px; // single
    $pull-offset : 2 * $col;
    $pull-gutter : 40px;

    .pull-left {
        margin-left: -$pull-offset;
        margin-bottom: 24px;
        width: calc(#{$pull-offset + $pull-gutter/2} + 50%);
        padding-right: $pull-gutter;

        padding-left: 1.5*$gutter;
        float: left;

        text-align: right;

        & + .pull-right {
            margin-right: -$pull-offset;
            width: calc(#{$pull-offset - $pull-gutter/2} + 50%);
            padding-left: 0;
        }
    }

    .pull-right {
        margin-right: -$pull-offset;
        margin-bottom: 24px;
        width: calc(#{$pull-offset + $pull-gutter/2} + 50%);
        padding-left: $pull-gutter;

        padding-right: 1.5*$gutter;
        float: right;

        text-align: left;
    }
}

// Two Column
.twocolumn {

    @include query-above($small) {
        // https://css-tricks.com/almanac/properties/b/break-inside/
        -webkit-column-break-inside: avoid; /* Chrome, Safari, Opera */
        page-break-inside: avoid; /* Firefox */
        break-inside: avoid; /* IE 10+ */

        -webkit-column-count: 2;
        -moz-column-count: 2;
        column-count: 2;

        -webkit-column-gap: 40px;
        -moz-column-gap: 40px;
        column-gap: 40px;
    }

    @include query-above($lap) {
        -webkit-column-gap: 60px;
        -moz-column-gap: 60px;
        column-gap: 60px;
    }
}

// Tables

table {
    position: relative;
    z-index: 1;
    margin-bottom: 24px;
    width: 100%;
    border-top: 0;
    border-collapse: collapse;

    table-layout: fixed;

    th {
        text-align: left;
    }

    tr {
        border-bottom: 1px solid $hoverColour;
    }

    th, td {
        padding: 12px;
        vertical-align: middle;

        font: {
            family: inherit;
            size: inherit;
        }
    }
}
